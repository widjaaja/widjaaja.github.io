{"version":3,"sources":["double-arrow.svg","react-logo.png","tailwindcss-logo.svg","marker.js","aside.js","summary.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Marker","props","color","province","country","latest","className","style","backgroundColor","cursor","title","Aside","state","side","handleClick","bind","this","setState","console","log","datas","data","deaths","onClick","width","src","doubleArrow","height","map","i","locations","Component","Summary","confirmed","recovered","convertToAngka","angka","rupiah","angkarev","toString","split","reverse","join","length","substr","right","class","reactLogo","alt","tailwindCss","App","center","lat","lng","zoom","isLoading","axios","get","then","response","Date","last_updated","catch","zIndex","bootstrapURLKeys","key","defaultCenter","defaultZoom","location","index","num","latitude","coordinates","longitude","long","Math","abs","sign","toFixed","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.206d6a87.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/double-arrow.9c5a5300.svg\";","module.exports = __webpack_public_path__ + \"static/media/react-logo.2d2b0d56.png\";","module.exports = __webpack_public_path__ + \"static/media/tailwindcss-logo.ccf9b186.svg\";","import React from 'react';\r\nimport './marker.css';\r\n\r\nconst Marker = (props) => {\r\n    const { color, province, country, latest } = props;\r\n    return (\r\n      <div className=\"marker bounce\"\r\n        style={{ backgroundColor: color, cursor: 'pointer'}}\r\n        title={province || country}\r\n      > \r\n      <div className=\"pulse\"></div>\r\n      <div className=\"container\">\r\n        <div className=\"counter\" >\r\n            <p className=\"count text-white\">{latest}</p>\r\n        </div>\r\n      </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  export default Marker;","import React, {Component} from 'react';\r\nimport './aside.css';\r\nimport doubleArrow from './double-arrow.svg';\r\n\r\nclass Aside extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        //setting state\r\n        this.state = {\r\n          side: true,\r\n        }\r\n        this.handleClick = this.handleClick.bind(this);\r\n    };\r\n\r\n    handleClick() {\r\n        this.setState({side: !this.state.side})\r\n        console.log(this.props);\r\n        \r\n      }\r\n    render() {\r\n        var datas = this.props.data;\r\n        var deaths = this.props.deaths\r\n        console.log(deaths);\r\n        \r\n        return <div>\r\n            { this.state.side ? <div className=\"asideContainer \" onClick={() => this.handleClick()}>\r\n                <img className=\"arrow\" style={{width: '15px'}} src={doubleArrow}></img>\r\n            </div> :  <div className=\"asideContainerTrue slideRight\" onClick={() => this.handleClick()}>\r\n                <div className=\"contentTrue rounded-lg px-2\" onClick={() => this.handleClick()}>\r\n                    <div style={{height: '16%'}}>\r\n                        <div className=\"text-gray-700 text-center text-lg tracking-wider font-medium px-4 py-2 my-3\">Coronavirus disease (COVID-19) OutBreak</div>\r\n                        {/* <div style={{width: '90%'}} class=\"text-center text-xs bg-gray-200 text-gray-700 inline-flex rounded p-2 mx-2\">\r\n                      <img src={searchIcon} class=\"mr-2 ml-1 w-4\" alt=\"\" />   \r\n                      <input class=\"appearance-none bg-transparent border-none w-full text-gray-700 leading-tight focus:outline-none\" type=\"text\" placeholder=\"Search By Email ...\" />\r\n                    </div> */}\r\n                        <div className=\"flex flex-row border-b border-gray-400 py-2 mr-4\">\r\n                            <div className=\"w-1/3 text-gray-700 text-center tracking-wide font-medium mx-2\">Places</div>\r\n                            <div className=\"w-1/3 text-gray-700 text-center tracking-wide font-medium mx-2\">Confirmed Cases</div>\r\n                            <div className=\"w-1/3 text-gray-700 text-center tracking-wide font-medium mx-2\">Death Cases</div>\r\n                        </div>\r\n                    </div>\r\n                    <div style={{height: '75%'}} className=\"flex flex-col overflow-auto py-4\">\r\n                        {datas.map((data, i) => {\r\n                            return(\r\n                            <div className=\"flex flex-row\">\r\n                                <div className=\"w-1/3 text-gray-700 text-center tracking-wide m-2\">{data.country}</div>\r\n                            <div className=\"w-1/3 text-gray-700 text-center tracking-wide m-2\">{data.latest}</div>\r\n                                <div className=\"w-1/3 text-gray-700 text-center m-2\">{deaths.locations[i].latest}</div>\r\n                            </div>\r\n                            )\r\n                        })}\r\n                    </div>\r\n                    <div style={{height: '9%'}}>\r\n                    <div className=\"text-gray-700 text-center text-sm font-medium py-2\">Made with  by Adjie</div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"arrowTrue\">\r\n                    <img className=\"arrowBack\" style={{width: '15px'}} src={doubleArrow}></img>\r\n                </div>\r\n            </div>\r\n                \r\n            } \r\n\r\n            {/* <div className=\"asideContainer\" onClick={() => this.handleClick()}>\r\n                <img className=\"arrow\" style={{width: '15px'}} src={doubleArrow}></img>\r\n            </div> */}\r\n\r\n        </div>\r\n     }\r\n}\r\n\r\nexport default Aside;","import React from 'react';\r\nimport './summary.css';\r\nimport reactLogo from './react-logo.png'\r\nimport tailwindCss from './tailwindcss-logo.svg'\r\n\r\nconst Summary = (props) => {\r\n    const { confirmed, deaths, recovered } = props;\r\n    function convertToAngka(angka)\r\n    {\r\n      var rupiah = '';\t\t\r\n      var angkarev = angka.toString().split('').reverse().join('');\r\n      for(var i = 0; i < angkarev.length; i++) if(i%3 == 0) rupiah += angkarev.substr(i,3)+'.';\r\n      return rupiah.split('',rupiah.length-1).reverse().join('');\r\n    }\r\n    return (\r\n      <div>\r\n        <div style={{ right: '5%'}} className=\"absolute overflow-auto bg-white rounded-lg z-50 m-2 pl-2 pr-4\">\r\n          <div class=\"flex flex-col m-1\">\r\n          <div class=\"text-gray-700 text-sm uppercase tracking-wider font-medium mx-2 my-1\">Coronavirus Map</div>\r\n            <div class=\"text-gray-700 text-xsm tracking-wider mx-2\">{convertToAngka(confirmed)} Confirmed Cases</div>\r\n            <div class=\"text-gray-700 text-xsm tracking-wider mx-2\">{convertToAngka(deaths)} Confirmed Cases</div>\r\n            <div class=\"text-gray-700 text-xsm tracking-wider mx-2\">{convertToAngka(recovered)} Confirmed Cases</div>\r\n            <div class=\"text-gray-700 text-xsm border-t border-gray-300 m-2\">Last Updated</div>\r\n          </div>\r\n        </div>\r\n        <div style={{ right: '5%', backgroundColor: 'rgba(255, 255, 255, 0.53)'}} className=\"absolute overflow-auto rounded-lg bottom-0 z-50 my-6 px-4\">\r\n          {/* <div class=\"flex flex-col m-1\">\r\n            <div class=\"text-gray-700 text-sm uppercase font-medium mx-2 my-1\">Created with :</div>\r\n            <div class=\"text-gray-700 text-xsm mx-2\">{confirmed} Confirmed Cases</div>\r\n            <div class=\"text-gray-700 text-xsm mx-2\">{deaths} Confirmed Cases</div>\r\n            <div class=\"text-gray-700 text-xsm mx-2\">{recovered} Confirmed Cases</div>\r\n            <div class=\"text-gray-700 text-xsm border-t border-gray-300 m-2\">Last Updated</div>\r\n          </div> */}\r\n          <div class=\"flex flex-row\">\r\n            <div class=\"text-gray-700 text-sm text-center font-medium my-auto\">Made with :</div>\r\n            <div class=\"text-gray-700 text-center py-2 my-auto\">\r\n              <img src={reactLogo} style={{width: '80px'}} class=\"ml-2 \" alt=\"\" />  \r\n            </div>\r\n            <div class=\"text-gray-700 text-center py-2 my-auto\">\r\n              <img src={tailwindCss} style={{width: '120px'}} class=\"ml-2 \" alt=\"\" />  \r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  export default Summary;","\nimport React, { useState, Component, Fragment } from 'react';\nimport GoogleMapReact from 'google-map-react';\nimport './App.css'\nimport Marker from './marker';\nimport Aside from './aside';\nimport Summary from './summary';\nimport axios from \"axios\";\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      locations: [],\n      confirmed: 0,\n      deaths: 0,\n      recovered: 0,\n      center: {lat: -1.9132401, lng: 108.6051593 },\n      zoom: 5,\n      isLoading: false\n    }\n};\n    async componentDidMount() {\n      this.setState({isLoading: true})\n      await axios.get(\"https://coronavirus-tracker-api.herokuapp.com/all\")\n      .then(response => response.data)\n      .then((data) => {\n        this.setState({ \n          data: data, \n          locations: data.confirmed.locations,\n          confirmed: data.latest.confirmed,\n          deaths: data.latest.deaths,\n          recovered: data.latest.recovered,\n          isLoading: false\n        })\n        console.log(new Date(this.state.data.confirmed.last_updated));\n        \n      })\n      .catch(console.log)\n    }\n    // const [center, setCenter] = useState({lat: -6.1878058, lng: 106.8223295 });\n    // const [zoom, setZoom] = useState(11);\n    // const [location, setLocation] = useState('');\n    // const [locationId, setLocationId] = useState(0);\n    // const fetchUsers = async () => {\n    //   const response = await axios.get(\"https://coronavirus-tracker-api.herokuapp.com/confirmed\");\n    //   setLocation(response.data);\n    // };\n    // useEffect( () => { fetchUsers(); }, [0]);\n\n    // console.log(location.locations.length);\n    \n    render() {\n      var center = this.state.center;\n      var zoom = this.state.zoom;\n      // var data = this.state.data;\n      var locations = this.state.locations;\n      const {isLoading} = this.state\n    \n      function kFormatter(num) {\n        return Math.abs(num) > 999 ? Math.sign(num)*((Math.abs(num)/1000).toFixed(1)) + 'k' : Math.sign(num)*Math.abs(num)\n      }\n    return (\n      <div style={{ height: '100vh', width: '100%' }}>\n       {isLoading ? <div style={{backgroundColor: 'rgba(20, 21, 20, 0.73)', zIndex: '9999'}} className=\"absolute h-full w-full\">\n         <div className=\"absolute loader\"></div>\n       </div> : <div></div>}\n       <Aside data={locations} deaths={this.state.data.deaths}></Aside>\n          <Summary confirmed={this.state.confirmed} deaths={this.state.deaths} recovered={this.state.recovered}></Summary>\n        \n        <GoogleMapReact\n          bootstrapURLKeys={{ key: 'AIzaSyAZeOqwDYKcMCk65yGVtd60xjE3VfdlI-A' }}\n          defaultCenter={center}\n          defaultZoom={zoom}\n        >\n \n        {locations.map((location, index) => {\n          const latitude = location.coordinates.lat; \n          const longitude = location.coordinates.long;\n          const latest = location.latest;\n          const province = location.province;\n          const country = location.country;\n\n          if (latest !== 0) {\n            return (\n              <Marker\n              lat={latitude}\n              lng={longitude}\n              province={province}\n              country={country}\n              color=\"blue\"\n              latest={kFormatter(latest)}\n            />\n            )\n          }\n        })}\n          {/* <Marker\n            lat={-6.187504}\n            lng={106.8269084}\n            name=\"My Marker\"\n            color=\"blue\"\n          /> */}\n        </GoogleMapReact>\n      </div>\n    );\n}\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './css/tailwind.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}